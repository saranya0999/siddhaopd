"""Add user_id to CensusEntry, relationship to User

Revision ID: 545ba14d73ef
Revises: 
Create Date: 2025-07-21 22:19:43.456945

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '545ba14d73ef'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    import sqlalchemy as sa
    # 1. Add user_id as nullable
    with op.batch_alter_table('census_entry', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))

    # 2. Pick your admin user's id (see instructions below)
    admin_id = 1

    # 3. Set all existing census entries to the admin
    conn = op.get_bind()
    conn.execute(
        sa.text("UPDATE census_entry SET user_id = :uid"),
        {"uid": admin_id}
    )

    # 4. Set user_id to NOT NULL and add the foreign key
    with op.batch_alter_table('census_entry', schema=None) as batch_op:
        batch_op.alter_column('user_id', nullable=False)
        batch_op.create_foreign_key(
            'censusentry_user_id_fk',  # constraint name
            'user',                    # referred table
            ['user_id'], ['id']
        )



    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('census_entry', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
